server {
	listen 80 default_server;
	listen [::]:80 default_server;
	return 301 https://nya-wsl.com/blocked;

#	root /opt/hexo/public;

#	index index.html index.htm index.nginx-debian.html;

#	server_name nya-wsl.com;

#	location / {
#		try_files $uri $uri/ =404;
#	}
}
server {
	listen 80;
        listen [::]:80;
	if ($host = nya-wsl.com) {
        return 301 https://$host$request_uri;
}
        if ($host = www.nya-wsl.com) {
        return 301 https://$host$request_uri;
}

	root /opt/hexo/public;
        
        index index.html index.htm index.nginx-debian.html;
        
        server_name nya-wsl.com www.nya-wsl.com;
        
        location / {
                try_files $uri $uri/ =404;
        }
}

server {
	listen 404;
	server_name nya-wsl.com;

	root /var/www/html;
	index index.html;
}

server {
	root /opt/hexo/public;
	server_name nya-wsl.com www.nya-wsl.com;

	index index.html index.htm index.nginx-debian.html;
	location / {
		try_files $uri $uri/ =404;
	}

    listen 443 ssl;# managed by Certbot
    ssl_certificate /etc/letsencrypt/live/nya-wsl.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/nya-wsl.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    listen 443 ssl default_server;
    return https://nya-wsl.com/blocked;    
    ssl_certificate /etc/letsencrypt/live/nya-wsl.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/nya-wsl.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	location /blocked {
		root /var/www/html;
}
}

server {
    if ($host = nya-wsl.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
#    if ($host != 'nya-wsl.com') {
#	rewrite ^/(.*)$ https://nya-wsl.com/$1 permanent;
#    }
#
#	listen 80 ;
#	listen [::]:80 ;
#    server_name _;
#    return 404; # managed by Certbot
}
server {
        listen 80;

        index index.html index.htm index.nginx-debian.html;
        server_name record.jp.nya-wsl.com;

        location / {
                proxy_pass http://127.0.0.1:2222;
                proxy_set_header Host $proxy_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}
server {
        listen 80;

        index index.html index.htm index.nginx-debian.html;
        server_name record.starring.nya-wsl.com;

        location / {
                proxy_pass http://127.0.0.1:2223;
                proxy_set_header Host $proxy_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}
server {
        listen 80;

        index index.html index.htm index.nginx-debian.html;
        server_name record.private.nya-wsl.com;

        location / {
                proxy_pass http://127.0.0.1:2224;
                proxy_set_header Host $proxy_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}
server {
        # Web 端公网访问端口
        listen 80;
	server_name mcsm.nya-wsl.com;
        location / {
            # Web 端反向代理目标
            proxy_pass http://localhost:23333/;
            root   html;
            index  index.html index.htm;
            # 一些必要的 HTTP Header 设置
            proxy_set_header Host localhost;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            # 必须的 Websocket 支持
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control no-cache;
            expires 12h;
        }
}

server {

        index index.html index.htm index.nginx-debian.html;
        server_name cloud.nya-wsl.com;

	location / {
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Host $http_host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header Range $http_range;
	proxy_set_header If-Range $http_if_range;
  proxy_redirect off;
  proxy_pass http://127.0.0.1:5244;
  # the max size of file to upload
  client_max_body_size 20000m;
}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cloud.nya-wsl.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cloud.nya-wsl.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = cloud.nya-wsl.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name cloud.nya-wsl.com;
    return 404; # managed by Certbot


}

server {
    if ($host = md.cloud.nya-wsl.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name md.cloud.nya-wsl.com;
    return 404; # managed by Certbot


}
